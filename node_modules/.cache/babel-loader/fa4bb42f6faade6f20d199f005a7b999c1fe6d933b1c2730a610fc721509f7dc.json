{"ast":null,"code":"const tailwindColors = require('tailwindcss/colors');\nconst postcssJs = require(\"postcss-js\");\nconst postcssPrefix = require('./lib/postcss-prefixer');\nconst daisyuiInfo = require(\"../package.json\");\nconst colors = require(\"./colors/index\");\nconst utilities = require(\"../dist/utilities\");\nconst base = require(\"../dist/base\");\nconst unstyled = require(\"../dist/unstyled\");\nconst unstyledRtl = require(\"../dist/unstyled.rtl\");\nconst styled = require(\"../dist/styled\");\nconst styledRtl = require(\"../dist/styled.rtl\");\nconst utilitiesUnstyled = require(\"../dist/utilities-unstyled\");\nconst utilitiesStyled = require(\"../dist/utilities-styled\");\nconst themes = require(\"./colors/themes\");\nconst colorFunctions = require(\"./colors/functions\");\nconst mainFunction = _ref => {\n  let {\n    addBase,\n    addComponents,\n    addUtilities,\n    config,\n    postcss\n  } = _ref;\n  let daisyuiIncludedItems = [];\n  let logs = false;\n  if (config(\"daisyui.logs\") != false) {\n    logs = true;\n  }\n  if (logs) {\n    console.log();\n    console.log(\"\\x1b[35m%s\\x1b[0m\", \"üåº daisyUI components \" + daisyuiInfo.version, \"\\x1b[0m\", daisyuiInfo.homepage);\n    console.group();\n  }\n\n  // inject @base style\n  if (config(\"daisyui.base\") != false) {\n    addBase(base);\n    daisyuiIncludedItems.push(\"base\");\n  }\n\n  // inject components\n  // because rollupjs doesn't supprt dynamic require\n  let file = styled;\n  if (config(\"daisyui.styled\") == false && config(\"daisyui.rtl\") != true) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    file = unstyled;\n  } else if (config(\"daisyui.styled\") == false && config(\"daisyui.rtl\") == true) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = unstyledRtl;\n  } else if (config(\"daisyui.styled\") != false && config(\"daisyui.rtl\") != true) {\n    daisyuiIncludedItems.push(\"components\");\n    file = styled;\n  } else if (config(\"daisyui.styled\") !== false && config(\"daisyui.rtl\") == true) {\n    daisyuiIncludedItems.push(\"components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = styledRtl;\n  }\n\n  // add prefix to class names if specified\n  const prefix = config(\"daisyui.prefix\");\n  let postcssJsProcess;\n  if (prefix) {\n    try {\n      postcssJsProcess = postcssJs.sync(postcssPrefix({\n        prefix,\n        ignore: []\n      }));\n    } catch (error) {\n      logs && console.error(`Error occurred and prevent applying the \"prefix\" option:`, error);\n    }\n  }\n  const shouldApplyPrefix = prefix && postcssJsProcess;\n  if (shouldApplyPrefix) {\n    file = postcssJsProcess(file);\n  }\n  addComponents(file);\n  const themeInjector = colorFunctions.injectThemes(addBase, config, themes);\n  themeInjector;\n  daisyuiIncludedItems.push(themeInjector.themeOrder.length + \" themes\");\n\n  // inject @utilities style needed by components\n  if (config(\"daisyui.utils\") != false) {\n    addComponents(utilities, {\n      variants: [\"responsive\"]\n    });\n    let toAdd = utilitiesUnstyled; // shadow clone here to avoid mutate the original\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n    addComponents(toAdd, {\n      variants: [\"responsive\"]\n    });\n    toAdd = utilitiesStyled;\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n    addComponents(toAdd, {\n      variants: [\"responsive\"]\n    });\n    daisyuiIncludedItems.push(\"utilities\");\n  }\n  if (logs) {\n    console.log(\"\\x1b[32m%s\\x1b[0m\", \"‚úîÔ∏é Including:\", \"\\x1b[0m\", \"\" + daisyuiIncludedItems.join(\", \"));\n    console.log(\"\\x1b[32m%s\\x1b[0m\", \"‚ù§Ô∏é Support daisyUI: \", daisyuiInfo.funding.url, \"\\x1b[0m\");\n    console.log();\n    console.groupEnd();\n  }\n};\nmodule.exports = require(\"tailwindcss/plugin\")(mainFunction, {\n  theme: {\n    extend: {\n      colors: {\n        ...colors,\n        // adding all Tailwind `neutral` shades here so they don't get overridden by daisyUI `neutral` color\n        \"neutral-50\": tailwindColors.neutral[50],\n        \"neutral-100\": tailwindColors.neutral[100],\n        \"neutral-200\": tailwindColors.neutral[200],\n        \"neutral-300\": tailwindColors.neutral[300],\n        \"neutral-400\": tailwindColors.neutral[400],\n        \"neutral-500\": tailwindColors.neutral[500],\n        \"neutral-600\": tailwindColors.neutral[600],\n        \"neutral-700\": tailwindColors.neutral[700],\n        \"neutral-800\": tailwindColors.neutral[800],\n        \"neutral-900\": tailwindColors.neutral[900]\n      }\n    }\n  }\n});","map":{"version":3,"names":["tailwindColors","require","postcssJs","postcssPrefix","daisyuiInfo","colors","utilities","base","unstyled","unstyledRtl","styled","styledRtl","utilitiesUnstyled","utilitiesStyled","themes","colorFunctions","mainFunction","_ref","addBase","addComponents","addUtilities","config","postcss","daisyuiIncludedItems","logs","console","log","version","homepage","group","push","file","prefix","postcssJsProcess","sync","ignore","error","shouldApplyPrefix","themeInjector","injectThemes","themeOrder","length","variants","toAdd","join","funding","url","groupEnd","module","exports","theme","extend","neutral"],"sources":["C:/Users/dyd97/OneDrive/Î∞îÌÉï ÌôîÎ©¥/test-main/node_modules/daisyui/src/index.js"],"sourcesContent":["const tailwindColors = require('tailwindcss/colors')\n\nconst postcssJs = require(\"postcss-js\")\nconst postcssPrefix = require('./lib/postcss-prefixer')\n\nconst daisyuiInfo = require(\"../package.json\");\nconst colors = require(\"./colors/index\");\nconst utilities = require(\"../dist/utilities\");\nconst base = require(\"../dist/base\");\nconst unstyled = require(\"../dist/unstyled\");\nconst unstyledRtl = require(\"../dist/unstyled.rtl\");\nconst styled = require(\"../dist/styled\");\nconst styledRtl = require(\"../dist/styled.rtl\");\nconst utilitiesUnstyled = require(\"../dist/utilities-unstyled\");\nconst utilitiesStyled = require(\"../dist/utilities-styled\");\nconst themes = require(\"./colors/themes\");\nconst colorFunctions = require(\"./colors/functions\");\n\nconst mainFunction = ({ addBase, addComponents, addUtilities, config, postcss }) => {\n  let daisyuiIncludedItems = [];\n  let logs = false;\n  if (config(\"daisyui.logs\") != false) {\n    logs = true;\n  }\n  if (logs) {\n    console.log();\n    console.log(\n      \"\\x1b[35m%s\\x1b[0m\",\n      \"üåº daisyUI components \" + daisyuiInfo.version,\n      \"\\x1b[0m\",\n      daisyuiInfo.homepage\n    );\n    console.group();\n  }\n\n  // inject @base style\n  if (config(\"daisyui.base\") != false) {\n    addBase(base);\n    daisyuiIncludedItems.push(\"base\");\n  }\n\n  // inject components\n  // because rollupjs doesn't supprt dynamic require\n  let file = styled;\n  if (config(\"daisyui.styled\") == false && config(\"daisyui.rtl\") != true) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    file = unstyled;\n  } else if (\n    config(\"daisyui.styled\") == false &&\n    config(\"daisyui.rtl\") == true\n  ) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = unstyledRtl;\n  } else if (\n    config(\"daisyui.styled\") != false &&\n    config(\"daisyui.rtl\") != true\n  ) {\n    daisyuiIncludedItems.push(\"components\");\n    file = styled;\n  } else if (\n    config(\"daisyui.styled\") !== false &&\n    config(\"daisyui.rtl\") == true\n  ) {\n    daisyuiIncludedItems.push(\"components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = styledRtl;\n  }\n\n  // add prefix to class names if specified\n  const prefix = config(\"daisyui.prefix\")\n  let postcssJsProcess\n  if (prefix) {\n    try {\n      postcssJsProcess = postcssJs.sync(postcssPrefix({ prefix, ignore: [] }))\n    } catch (error) {\n      logs && console.error(`Error occurred and prevent applying the \"prefix\" option:`, error)\n    }\n  }\n  const shouldApplyPrefix = prefix && postcssJsProcess;\n  if (shouldApplyPrefix) {\n    file = postcssJsProcess(file)\n  }\n\n  addComponents(file);\n\n  const themeInjector = colorFunctions.injectThemes(addBase, config, themes)\n  themeInjector;\n\n  daisyuiIncludedItems.push(themeInjector.themeOrder.length + \" themes\");\n\n  // inject @utilities style needed by components\n  if (config(\"daisyui.utils\") != false) {\n    addComponents(utilities, { variants: [\"responsive\"] });\n\n    let toAdd = utilitiesUnstyled // shadow clone here to avoid mutate the original\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n    addComponents(toAdd, { variants: [\"responsive\"] });\n\n    toAdd = utilitiesStyled\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n    addComponents(toAdd, { variants: [\"responsive\"] });\n    daisyuiIncludedItems.push(\"utilities\");\n  }\n  if (logs) {\n    console.log(\n      \"\\x1b[32m%s\\x1b[0m\",\n      \"‚úîÔ∏é Including:\",\n      \"\\x1b[0m\",\n      \"\" + daisyuiIncludedItems.join(\", \")\n    );\n    console.log(\n      \"\\x1b[32m%s\\x1b[0m\",\n      \"‚ù§Ô∏é Support daisyUI: \", daisyuiInfo.funding.url,\n      \"\\x1b[0m\",\n    );\n    console.log();\n    console.groupEnd();\n  }\n};\n\nmodule.exports = require(\"tailwindcss/plugin\")(mainFunction, {\n  theme: { \n    extend: {\n      colors: {\n        ...colors,\n        // adding all Tailwind `neutral` shades here so they don't get overridden by daisyUI `neutral` color\n        \"neutral-50\": tailwindColors.neutral[50],\n        \"neutral-100\": tailwindColors.neutral[100],\n        \"neutral-200\": tailwindColors.neutral[200],\n        \"neutral-300\": tailwindColors.neutral[300],\n        \"neutral-400\": tailwindColors.neutral[400],\n        \"neutral-500\": tailwindColors.neutral[500],\n        \"neutral-600\": tailwindColors.neutral[600],\n        \"neutral-700\": tailwindColors.neutral[700],\n        \"neutral-800\": tailwindColors.neutral[800],\n        \"neutral-900\": tailwindColors.neutral[900],\n      }\n    }\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}