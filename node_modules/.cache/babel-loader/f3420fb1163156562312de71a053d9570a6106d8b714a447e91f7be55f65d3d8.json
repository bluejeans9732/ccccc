{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString();\n  } else {\n    return window.atob(str);\n  }\n}\n/**\n * Source map information from input CSS.\n * For example, source map after Sass compiler.\n *\n * This class will automatically find source map in input CSS or in file system\n * near input file (according `from` option).\n *\n * @example\n * const root = postcss.parse(css, { from: 'a.sass.css' })\n * root.input.map //=> PreviousMap\n */\n\nvar PreviousMap = /*#__PURE__*/function () {\n  /**\n   * @param {string}         css    Input CSS source.\n   * @param {processOptions} [opts] {@link Processor#process} options.\n   */\n  function PreviousMap(css, opts) {\n    this.loadAnnotation(css);\n    /**\n     * Was source map inlined by data-uri to input CSS.\n     *\n     * @type {boolean}\n     */\n\n    this.inline = this.startWith(this.annotation, 'data:');\n    var prev = opts.map ? opts.map.prev : undefined;\n    var text = this.loadMap(opts.from, prev);\n    if (text) this.text = text;\n  }\n  /**\n   * Create a instance of `SourceMapGenerator` class\n   * from the `source-map` library to work with source map information.\n   *\n   * It is lazy method, so it will create object only on first call\n   * and then it will use cache.\n   *\n   * @return {SourceMapGenerator} Object with source map information.\n   */\n\n  var _proto = PreviousMap.prototype;\n  _proto.consumer = function consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new _sourceMap.default.SourceMapConsumer(this.text);\n    }\n    return this.consumerCache;\n  }\n  /**\n   * Does source map contains `sourcesContent` with input source text.\n   *\n   * @return {boolean} Is `sourcesContent` present.\n   */;\n\n  _proto.withContent = function withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  };\n  _proto.startWith = function startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  };\n  _proto.getAnnotationURL = function getAnnotationURL(sourceMapString) {\n    return sourceMapString.match(/\\/\\*\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\*\\//)[1].trim();\n  };\n  _proto.loadAnnotation = function loadAnnotation(css) {\n    var annotations = css.match(/\\/\\*\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\*\\//gm);\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      var lastAnnotation = annotations[annotations.length - 1];\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation);\n      }\n    }\n  };\n  _proto.decodeInline = function decodeInline(text) {\n    var baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    var baseUri = /^data:application\\/json;base64,/;\n    var uri = 'data:application/json,';\n    if (this.startWith(text, uri)) {\n      return decodeURIComponent(text.substr(uri.length));\n    }\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length));\n    }\n    var encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding);\n  };\n  _proto.loadMap = function loadMap(file, prev) {\n    if (prev === false) return false;\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev;\n      } else if (typeof prev === 'function') {\n        var prevPath = prev(file);\n        if (prevPath && _fs.default.existsSync && _fs.default.existsSync(prevPath)) {\n          return _fs.default.readFileSync(prevPath, 'utf-8').toString().trim();\n        } else {\n          throw new Error('Unable to load previous source map: ' + prevPath.toString());\n        }\n      } else if (prev instanceof _sourceMap.default.SourceMapConsumer) {\n        return _sourceMap.default.SourceMapGenerator.fromSourceMap(prev).toString();\n      } else if (prev instanceof _sourceMap.default.SourceMapGenerator) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error('Unsupported previous source map format: ' + prev.toString());\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      var map = this.annotation;\n      if (file) map = _path.default.join(_path.default.dirname(file), map);\n      this.root = _path.default.dirname(map);\n      if (_fs.default.existsSync && _fs.default.existsSync(map)) {\n        return _fs.default.readFileSync(map, 'utf-8').toString().trim();\n      } else {\n        return false;\n      }\n    }\n  };\n  _proto.isMap = function isMap(map) {\n    if (typeof map !== 'object') return false;\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string';\n  };\n  return PreviousMap;\n}();\nvar _default = PreviousMap;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_sourceMap","_interopRequireDefault","require","_path","_fs","fromBase64","str","Buffer","from","toString","window","atob","PreviousMap","css","opts","loadAnnotation","inline","startWith","annotation","prev","map","undefined","text","loadMap","consumer","consumerCache","default","SourceMapConsumer","withContent","sourcesContent","length","string","start","substr","getAnnotationURL","sourceMapString","match","trim","annotations","lastAnnotation","decodeInline","baseCharsetUri","baseUri","uri","decodeURIComponent","test","RegExp","lastMatch","encoding","Error","file","prevPath","existsSync","readFileSync","SourceMapGenerator","fromSourceMap","isMap","JSON","stringify","join","dirname","root","mappings","_mappings"],"sources":["C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\node_modules\\postcss\\lib\\previous-map.es6"],"sourcesContent":["import mozilla from 'source-map'\nimport path from 'path'\nimport fs from 'fs'\n\nfunction fromBase64 (str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    return window.atob(str)\n  }\n}\n\n/**\n * Source map information from input CSS.\n * For example, source map after Sass compiler.\n *\n * This class will automatically find source map in input CSS or in file system\n * near input file (according `from` option).\n *\n * @example\n * const root = postcss.parse(css, { from: 'a.sass.css' })\n * root.input.map //=> PreviousMap\n */\nclass PreviousMap {\n  /**\n   * @param {string}         css    Input CSS source.\n   * @param {processOptions} [opts] {@link Processor#process} options.\n   */\n  constructor (css, opts) {\n    this.loadAnnotation(css)\n    /**\n     * Was source map inlined by data-uri to input CSS.\n     *\n     * @type {boolean}\n     */\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (text) this.text = text\n  }\n\n  /**\n   * Create a instance of `SourceMapGenerator` class\n   * from the `source-map` library to work with source map information.\n   *\n   * It is lazy method, so it will create object only on first call\n   * and then it will use cache.\n   *\n   * @return {SourceMapGenerator} Object with source map information.\n   */\n  consumer () {\n    if (!this.consumerCache) {\n      this.consumerCache = new mozilla.SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  /**\n   * Does source map contains `sourcesContent` with input source text.\n   *\n   * @return {boolean} Is `sourcesContent` present.\n   */\n  withContent () {\n    return !!(this.consumer().sourcesContent &&\n              this.consumer().sourcesContent.length > 0)\n  }\n\n  startWith (string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL (sourceMapString) {\n    return sourceMapString\n      .match(/\\/\\*\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\*\\//)[1]\n      .trim()\n  }\n\n  loadAnnotation (css) {\n    let annotations = css.match(\n      /\\/\\*\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\*\\//gm\n    )\n\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      let lastAnnotation = annotations[annotations.length - 1]\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation)\n      }\n    }\n  }\n\n  decodeInline (text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let uri = 'data:application/json,'\n\n    if (this.startWith(text, uri)) {\n      return decodeURIComponent(text.substr(uri.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadMap (file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath && fs.existsSync && fs.existsSync(prevPath)) {\n          return fs.readFileSync(prevPath, 'utf-8').toString().trim()\n        } else {\n          throw new Error(\n            'Unable to load previous source map: ' + prevPath.toString())\n        }\n      } else if (prev instanceof mozilla.SourceMapConsumer) {\n        return mozilla.SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof mozilla.SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString())\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = path.join(path.dirname(file), map)\n\n      this.root = path.dirname(map)\n      if (fs.existsSync && fs.existsSync(map)) {\n        return fs.readFileSync(map, 'utf-8').toString().trim()\n      } else {\n        return false\n      }\n    }\n  }\n\n  isMap (map) {\n    if (typeof map !== 'object') return false\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string'\n  }\n}\n\nexport default PreviousMap\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}