[{"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\index.js":"1","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\Routes.js":"2","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Navbar.jsx":"3","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\pages\\Home.jsx":"4","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\pages\\place\\Places.jsx":"5","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\PlacesMap.jsx":"6","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Place.jsx":"7","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\utils\\cookies.js":"8","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\utils\\MapContainer.js":"9","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\App.jsx":"10","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Login.jsx":"11","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Pwid.jsx":"12","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\product.jsx":"13","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\ProductResevation.jsx":"14","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\PickDatePicker.jsx":"15","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\BannerCarousel.jsx":"16","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\ProductReview.jsx":"17","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\DropDown2.jsx":"18","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\Modal.jsx":"19","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\LoginMain\\LoginMain.jsx":"20","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\LoginMain\\ListCard.jsx":"21","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\LoginMain\\LoginMainReview.jsx":"22","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Footer.jsx":"23"},{"size":386,"mtime":1681446161836,"results":"24","hashOfConfig":"25"},{"size":0,"mtime":1681439331000,"results":"26","hashOfConfig":"25"},{"size":3045,"mtime":1681439331000,"results":"27","hashOfConfig":"25"},{"size":1592,"mtime":1681439331000,"results":"28","hashOfConfig":"25"},{"size":1919,"mtime":1681439331000,"results":"29","hashOfConfig":"25"},{"size":1913,"mtime":1681439331000,"results":"30","hashOfConfig":"25"},{"size":353,"mtime":1681439331000,"results":"31","hashOfConfig":"25"},{"size":348,"mtime":1681439331000,"results":"32","hashOfConfig":"25"},{"size":355,"mtime":1681439331000,"results":"33","hashOfConfig":"25"},{"size":1278,"mtime":1681446166799,"results":"34","hashOfConfig":"25"},{"size":3812,"mtime":1681446168008,"results":"35","hashOfConfig":"25"},{"size":9214,"mtime":1681384996000,"results":"36","hashOfConfig":"25"},{"size":8281,"mtime":1681446164503,"results":"37","hashOfConfig":"25"},{"size":5473,"mtime":1681446171298,"results":"38","hashOfConfig":"25"},{"size":1710,"mtime":1681384996000,"results":"39","hashOfConfig":"25"},{"size":894,"mtime":1681446165462,"results":"40","hashOfConfig":"25"},{"size":902,"mtime":1681384996000,"results":"41","hashOfConfig":"25"},{"size":1649,"mtime":1681384996000,"results":"42","hashOfConfig":"25"},{"size":858,"mtime":1681446170277,"results":"43","hashOfConfig":"25"},{"size":5990,"mtime":1681443666367,"results":"44","hashOfConfig":"25"},{"size":1316,"mtime":1681384996000,"results":"45","hashOfConfig":"25"},{"size":1532,"mtime":1681384996000,"results":"46","hashOfConfig":"25"},{"size":265,"mtime":1681384996000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"1grc9tt",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"55"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"55"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\index.js",["128"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Routes from \"./Routes\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n// ReactDOM.render(<Routes />, document.getElementById('root'));\n\nif (process.env.NODE_ENV === \"production\") {\n    require(\"dotenv\").config();\n  }\n\n  ","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\Routes.js",[],[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\pages\\Home.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\pages\\place\\Places.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\PlacesMap.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Place.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\utils\\cookies.js",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\utils\\MapContainer.js",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\App.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Login.jsx",["129","130","131"],[],"\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction Login() {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [user, setUser] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n\n    useEffect(()=> {\n        userRef.current.focus();\n    },[])\n\n    useEffect(() => {\n        setErrMsg('');\n    },[])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('/api/login', {\n                user,\n                pwd\n            });\n            console.log(response.data);\n        } catch (error) {\n            console.log(error)\n        }\n        setUser('');\n        setPwd('');\n    }\n\n    return (\n        <div className=\"h-full w-full relative overflow-y-scroll scrollbar-hide flex\">\n            <div className=\"flex w-3/6\"><img src=\"./image/carfix.jpg\"/></div>\n            <div className=\" pt-20 pl-20 mx-auto w-3/6 bg-gray-50\">\n\n                <Link to=\"/\" className=\"mx-auto\"><h1 className=\"text-5xl\">Oh! MyCar</h1></Link>\n\n                <section className=\"flex flex-col mt-20 mx-auto w-1/2\">\n                    <form autocomplete=\"off\">\n\n                        <h1 className=\"text-4xl\">로그인</h1>\n                        <p className=\"mt-3 text-xs font-light\">회원정보를 입력해주세요.</p>\n\n                        <div className=\"mt-10\">\n                            <label htmlFor=\"useremail\" >이메일 주소</label>\n                            <input \n                                type=\"email\"\n                                id=\"useremail\"\n                                placeholder=\"ABC@email.com\"\n                                ref={userRef}\n                                autoComplete=\"off\"\n                                onChange={(e)=> setUser(e.target.value)}\n                                value={user}\n                                required\n                                className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                            />\n                        </div>\n                        \n                        <div className=\"mt-3\">\n                            <label htmlFor=\"password\">비밀번호</label>\n                            <input \n                                type=\"password\"\n                                id=\"password\"\n                                required\n                                onChange={(e)=> setPwd(e.target.value)}\n                                value={pwd}\n                                placeholder=\"비밀번호를 입력해주세요.\"\n                                className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                            />\n                        </div>\n                        \n                        <div>\n                            <p className=\"mt-1 text-xs float-right font-light\">비밀번호를 잊어버렸나요?</p>\n                        </div>\n                        <button className=\"Login_login rounded-md  mt-10 w-full h-12 bg-cyan-300 text-white text-bold\" onSubmit={handleSubmit}>로그인</button>\n\n                    </form>\n                    \n                    <button className=\"rounded-md  mt-4 w-full h-12 bg-yellow-400 text-white\">Kakao로 로그인</button>\n                    \n                    <div className=\"mx-auto mt-20\">아직 계정이 없다면?<Link to=\"/pwid\" className=\"ml-3 underline underline-offset-2 font-bold\">회원가입</Link></div>\n                </section>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Login;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Pwid.jsx",["132","133","134","135","136","137","138","139"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Pwid() {\n    \n    const emailRegex =\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    const passwordRegex = /(?=.*\\d)(?=.*[a-z]).{8,}/; // 영어 소문자, 숫자 포함 8자 이상 비밀번호\n    const nickRegex = /^[ㄱ-ㅎ|가-힣]+$/; //한글만\n    \n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [user, setUser] = useState('');\n    const [validName, setValidName] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n\n    const [pwd, setPwd] = useState('');\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);\n\n    const [matchPwd, setMatchPwd] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false);\n\n    const [nickname, setNickname] = useState('');\n    const [validnick, setValidnick] = useState(false);\n    const [nickFocus, setNickFocus] = useState(false);\n    \n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(()=> {\n        userRef.current.focus();\n    },[])\n\n    useEffect(() => {\n        const result = emailRegex.test(user);\n        console.log(result);\n        console.log(user);\n        setValidName(result);\n    }, [user])\n\n    useEffect(() => {\n        const result = passwordRegex.test(pwd);\n        console.log(result);\n        console.log(pwd);\n        setValidPwd(result);\n        const match = pwd === matchPwd;\n        setValidMatch(match);\n    }, [pwd, matchPwd])\n\n    useEffect(() => {\n        const result = nickRegex.test(nickname);\n        console.log(result);\n        console.log(nickname);\n        setValidnick(result);\n    }, [nickname])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd, matchPwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(user, pwd, nickname);\n        try {\n            const response = await axios.post('/api/signup', {\n                user,\n                pwd,\n                nickname\n            });\n            console.log(response.data);\n          } catch (error) {\n            console.log(error);\n          }\n    }\n\n    return (\n        <div className=\"h-full w-full relative overflow-y-scroll scrollbar-hide flex\">\n            <div className=\"flex w-3/6\"><img src=\"./image/carfix.jpg\"/></div>\n            <section className=\"pt-20 pl-20 mx-auto w-3/6 bg-gray-50\">\n\n                <Link to=\"/\" className=\"mx-auto\"><h1 className=\"text-5xl\">Oh! MyCar</h1></Link>\n\n                <form autocomplete=\"off\">\n                    <div className=\"flex flex-col mt-20 mx-auto w-1/2\">\n\n                        <h1 className=\"text-4xl\">회원가입</h1>\n                        <p className=\"mt-3 text-xs font-light\">가입 양식에 맞게 작성해주세요.</p>\n\n                        <div className=\"mt-10\">\n                            <label htmlFor=\"useremail\">이메일 주소</label>\n                            <input \n                                type=\"email\"\n                                id=\"useremail\"\n                                ref={userRef}\n                                autoComplete=\"off\"\n                                required\n                                value={user}\n                                onChange={(e)=> setUser(e.target.value)}\n                                aria-invalid={validName ? \"false\" : \"true\"}\n                                aria-describedby=\"uidnote\"\n                                onFocus={() => setUserFocus(true)}\n                                onBlur={() => setUserFocus(false)}\n                                placeholder=\"ABC@email.com\"\n                                className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                            />\n                            <p id=\"uidnote\" className={userFocus && user && !validName ? \"block text-xs mt-1\" : \"hidden\"}>\n                                올바른 이메일 형식이 아닙니다.\n                            </p>\n                        </div>\n                        \n                        <div className=\"mt-3\">\n                            <label htmlFor=\"password\">비밀번호</label>\n                            <input \n                                type=\"password\"\n                                id=\"password\"\n                                value={pwd}\n                                onChange={(e) => setPwd(e.target.value)}\n                                required\n                                aria-invalid={validPwd ? \"false\" : \"true\"}\n                                aria-describedby=\"pwdnote\"\n                                onFocus={() => setPwdFocus(true)}\n                                onBlur={() => setPwdFocus(false)}\n                                placeholder=\"비밀번호를 입력해주세요.\"\n                                className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                                \n                            />\n                            <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"block text-xs mt-1\" : \"hidden\"}>\n                                영어 소문자와 숫자 조합으로 8자리 이상 입력해주세요.\n                            </p>\n                        </div>\n                        \n                        <div className=\"mt-3\">\n                            <label htmlFor=\"confirm_pwd\" >비밀번호 재확인</label>\n                            <input \n                                type=\"password\"\n                                id=\"confirm_pwd\"\n                                onChange={(e) => setMatchPwd(e.target.value)}\n                                required\n                                aria-invalid={validMatch ? \"false\" : \"true\"}\n                                aria-describedby=\"confirmnote\"\n                                onFocus={() => setMatchFocus(true)}\n                                onBlur={() => setMatchFocus(false)}\n                                placeholder=\"비밀번호를 다시 입력해주세요.\"\n                                className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                            \n                            />\n                            <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"block text-xs mt-1 text-red-600\" : \"hidden\"}>\n                                비밀번호가 다릅니다.\n                            </p>\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <label htmlFor=\"nickname\">닉네임</label>\n                            <div className=\"flex mt-1 w-full h-12 flex justify-between\">\n                                <input \n                                    type=\"text\"\n                                    id=\"nickname\"\n                                    required\n                                    value={nickname}\n                                    onChange={(e) => setNickname(e.target.value)}\n                                    aria-invalid={validnick ? \"false\" : \"true\"}\n                                    aria-describedby=\"arianick\"\n                                    onFocus={() => setNickFocus(true)}\n                                    onBlur={() => setNickFocus(false)}\n                                    placeholder=\"ex) 홍길동\"\n                                    className=\"rounded-md border-2 border-slate-300 h-10 w-4/6 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                                />\n                                <button className=\"rounded-md  w-36 h-10 text-white bg-sky-800\">중복확인</button>\n                            </div>\n                            <p id=\"arianick\" className={nickFocus && !validnick ? \"block text-xs text-red-600\" : \"hidden\"}>\n                                닉네임은 한글만 적어주세요.\n                            </p>\n                        </div>\n                        \n\n                        <button \n                            className={!validName || !validPwd || !validMatch || !validnick ? \"rounded-md mt-10 h-12 text-white bg-gray-400\" : \"rounded-md mt-10 h-12 text-white bg-blue-400\"}\n                            disabled={!validName || !validPwd || !validMatch || !validnick ? true : false}\n                            onSubmit={handleSubmit}\n                        > \n                            회원가입 하기\n                        </button>\n\n                        <div className=\"mx-auto mt-20 \"><Link to=\"/login\" className=\"ml-3 underline underline-offset-2 font-bold\">로그인 페이지로 돌아가기</Link></div>\n                        \n                    </div>\n                </form>\n                \n                \n            </section>\n            \n        </div>\n    )\n}\n\nexport default Pwid;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\product.jsx",["140"],[],"import React, { useState } from 'react';\nimport BannerCarousel from './BannerCarousel';\nimport PickDatePicker from  './PickDatePicker';\nimport ProductReview from  './ProductReview';\nimport DropDown2 from './DropDown2';\nimport Modal from './Modal';\n\n\n\nfunction Product() {\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [open, setOpen] = useState(false);\n \n    const items = [\n        { id: 1, label: '엔진 오일', price: 50000 },\n        { id: 2, label: '브레이크 필터', price: 94000 },\n        { id: 3, label: '연료 필터', price: 100100 },\n        { id: 4, label: '브레이크 오일', price: 58700 },\n        { id: 5, label: '부동액', price: 54500 },\n        { id: 6, label: '배터리', price: 264900 },\n        { id: 7, label: '벨트', price: 52600 },\n        { id: 8, label: '타이어', price: 50000 },\n    ];\n\n    const handleDropdownChange = (item) => {\n        const index = selectedItems.findIndex((selectedItem) => selectedItem.id === item.id);\n        if (index > -1) {\n            const updatedItems = [...selectedItems];\n            updatedItems[index].quantity++;\n            setSelectedItems(updatedItems);\n        } else {\n            setSelectedItems([...selectedItems, { ...item, quantity: 1 }]);\n        }\n    };\n\n    const handleRemoveItemClick = (item) => {\n        const updatedItems = selectedItems.filter((selectedItem) => selectedItem.id !== item.id);\n        setSelectedItems(updatedItems);\n    };\n\n    const handleItemIncrement = (item) => {\n        const index = selectedItems.findIndex((selectedItem) => selectedItem.id === item.id);\n        const updatedItems = [...selectedItems];\n        updatedItems[index].quantity++;\n        setSelectedItems(updatedItems);\n    };\n\n    const handleItemDecrement = (item) => {\n        const index = selectedItems.findIndex((selectedItem) => selectedItem.id === item.id);\n        const updatedItems = [...selectedItems];\n        updatedItems[index].quantity--;\n        if (updatedItems[index].quantity === 0) {\n            updatedItems.splice(index, 1);\n        }\n        setSelectedItems(updatedItems);\n    };\n\n    localStorage.setItem(\"selectedItems\", JSON.stringify(selectedItems));\n    \n    return (\n      <div className=\"h-screen overflow-y-scroll scrollbar-hide relative bg-gray-100\">\n        <div className=\"flex flex-col mx-auto bg-white w-2/5 \">\n            <div>\n                <div className=\"mx-auto w-full bg-blue-300\"><BannerCarousel /></div>\n                <div className=\"mt-4 ml-4\">\n                    <div className=\"font-bold\">어디동 어디점</div>\n                    <p className=\"mt-1 text-xs font-light w-full\">경기도 어디동 어디도로 65번길 100</p>\n                </div>\n                \n                \n                <div className=\"mt-10 mx-auto w-3/5 h-full\">\n                    <div className=\"flex flex-col  \">\n                        <div className=\"w-40 h-32 mx-auto\">\n                            <img src=\"./image/carcenterOner.jpg\" className=\"rounded-full \" />\n                        </div>\n                        <div className=\"w-full h-full ml-1 font-bold\">\n                            <p>초보 운전자들을 위한 카센터</p>\n                            <p className=\"mt-1 text-xs font-light\">저희 한성카센터는 차량에 대해 잘 알지 못하는 초보 운전자들이라도 가볍게 방문할 수 있는 정비소입니다.\n                                또 10여년 경력의 베테랑 정비사가 모든 문제를 세심히 진단하고 빠른 해결책을 보장하고 있습니다.\n                                꼭 차에 문제가 없더라도 차량관리에 대한 모든 노하우를 친절하게 알려드립니다.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <p className=\"border-t border-slate-200 mt-6 w-line mx-auto\"></p>\n                \n                <div className=\"mt-4 ml-4\">\n                    <h1 className=\"font-bold\">가격정보</h1>\n                    <div className=\"mt-4 ml-2\">\n                        <div className=\"mt-1\">엔진 오일 : 50,000원</div>\n                        <div className=\"mt-1\">브레이크 필터  : 94,000원</div>\n                        <div className=\"mt-1\">연료 필터 : 100,100원</div>\n                        <div className=\"mt-1\">브레이크 오일 : 58,700원</div>\n                        <div className=\"mt-1\">부동액 : 54,500원</div>\n                        <div className=\"mt-1\">배터리 : 264,900원</div>\n                        <div className=\"mt-1\">벨트 : 52,600원</div>\n                        <div className=\"mt-1\">타이어 : 50,000원</div>\n                        \n                    </div>\n                </div>\n                <div className=\"mt-6 ml-4\">\n                    <h1 className=\"font-bold\">매장 정보</h1>\n                    <div className=\"mt-4 ml-2\">\n                        <div className=\"mt-1\">오픈시간 : 9 ~ 18시</div>\n                        <div className=\"mt-1\">예약은 한시간 단위로 열립니다.</div>\n                    </div>\n                    \n                </div>\n\n                <p className=\"border-t border-slate-200 mt-6 w-line mx-auto\"></p>\n                \n                <div className='flex justify-between'>\n                    <h1 className=\"font-bold mt-6 ml-4\">베스트 리뷰</h1>\n                    <h1 className=\"font-bold mt-6 mr-8\">전체보기</h1>\n                </div>\n                \n                <div className=\"mt-4 ml-4 mr-4 flex\">\n                    <ProductReview />\n                    <ProductReview />\n                </div>\n\n                <p className=\"border-t border-slate-400 mt-10 w-line mx-auto\"></p>\n\n                <h1 className=\"font-bold mt-6 ml-4\">예약 선택</h1>\n                <div className=\"w-line mx-auto h-full mt-4 ml-4\">\n                    <p className=\"text-xs mt-2 font-semibold\">예약 날짜</p>\n                    <div className=\"mt-1 w-[240px]\"><PickDatePicker/></div>\n                    <p className=\"text-xs mt-4 font-semibold\">예약 물품</p>\n                    <div className=\"mt-1 \">\n                        <div>\n                            <DropDown2\n                                title=\"선택하세요\"\n                                items={items}\n                                onDropdownChange={handleDropdownChange}\n                                \n                            />\n                            <p className=\"text-xs mt-4 font-bold\">선택하신 목록</p>\n\n                            <ul className='mt-2 w-[400px]'>\n                                {selectedItems.map((item) => (\n                                <li key={item.id} className='flex flex-row mt-2'>\n                                    \n                                    <div className='flex justify-between'>\n                                        <div>{item.label}</div>\n                                        <div className='flex'>\n                                            <p className='ml-5'> 수량\n                                            <button  className='ml-3 mr-2 w-5 bg-red-400 text-white rounded' onClick={() => handleItemDecrement(item)}>-</button>\n                                            {item.quantity}</p> \n                                            <button  className='ml-3 w-5 bg-blue-400 text-white rounded' onClick={() => handleItemIncrement(item)}>+</button>\n                                            <button  className='ml-3 w-20 bg-blue-400 text-white rounded' onClick={() => handleRemoveItemClick(item)}>삭제</button>\n                                        </div>\n                                    </div>\n                                   \n                                </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>          \n                </div>\n\n                <button className=\"bg-blue-300 w-full mt-10 p-2 text-white rounded-sm\" onClick={() => setOpen(true)}>예약하기</button>\n                \n                <Modal open={open} onClose={() => setOpen(false)} />\n                \n            </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default Product;\n  ","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\ProductResevation.jsx",["141","142"],[],"import React, { useEffect, useState } from \"react\";\n\nfunction ProductResevation() {\n\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [startDate, setStartDate] = useState(\"\");\n    \n    const handlePress = (e) => {\n        const regex = /^[0-9\\b -]{0,13}$/;\n        if (regex.test(e.target.value)) {\n            setPhoneNumber(e.target.value);\n        }\n    }\n\n    useEffect(() => {\n        if (phoneNumber.length === 10) {\n            setPhoneNumber(phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3'));\n        }\n        if (phoneNumber.length === 13) {\n            setPhoneNumber(phoneNumber.replace(/-/g, '').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\n        }\n    }, [phoneNumber]);\n\n    useEffect(() => {\n        const storedStartDate = localStorage.getItem(\"startDate\");\n        const formattedStartDate = storedStartDate.replace(\"T\", \" \");\n    \n        const dateObj = new Date(formattedStartDate);\n        const options = { year: \"numeric\", month: \"long\", day: \"numeric\", hour: \"numeric\", hour12: true };\n        const formattedDate = dateObj.toLocaleString(\"ko-KR\", options);\n    \n        setStartDate(formattedDate);\n    }, []);\n\n    const savedSelectedItems = JSON.parse(localStorage.getItem(\"selectedItems\"));\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const reservationData = {\n            name: name,\n            address: address,\n            phoneNumber: phoneNumber,\n            time: startDate,\n            item: savedSelectedItems,\n            price: totalPrice,\n        };\n    }\n\n    console.log(startDate)\n    console.log(savedSelectedItems)\n\n    const [totalPrice, setTotalPrice] = useState(0);\n    \n    useEffect(() => {\n        let total = 0;\n        savedSelectedItems.forEach(item => {\n          total += item.price * item.quantity;\n        });\n        setTotalPrice(total);\n    }, [savedSelectedItems]);\n\n    return (\n        <div className=\"h-full w-full overflow-y-scroll scrollbar-hide relative bg-gray-100\">\n            <div className=\"flex flex-col mx-auto bg-white \">\n                <form className=\"flex flex-col w-line mx-auto \">\n\n                    <div className=\"flex flex-col\">\n                        <div className=\"font-bold\">예약자 정보</div>\n                        <label htmlFor=\"name\" className=\"mt-3 text-xs font-light\">이름</label>\n                        <input \n                            type=\"text\" \n                            id=\"name\" \n                            value={name} \n                            onChange={e => setName(e.target.value)}\n                            required \n                            autoComplete=\"off\"\n                            className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                        />\n                        {/* <label htmlFor=\"address\" className=\"mt-3 text-xs font-light\">주소</label>\n                        <input \n                            type=\"text\" \n                            id=\"address\" \n                            value={address} \n                            onChange={e => setAddress(e.target.value)} \n                            required\n                            autoComplete=\"off\"\n                            className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                        /> */}\n\n                        <label htmlFor=\"phonenumber\" className=\"mt-3 text-xs font-light\">핸드폰 번호</label>\n                        <input \n                            type=\"text\" \n                            id=\"phonenumber\" \n                            autoComplete=\"off\"\n                            value={phoneNumber} \n                            onChange={handlePress} \n                            className=\"rounded-md  mt-1 border-2 border-slate-300 w-full h-10 outline-none focus:bg-cyan-50 p-3 focus:border-blue-500\"\n                        />\n                    </div>\n                    \n                    <div>\n                        <div className=\"font-bold mt-4\">예약 정보</div>\n                        <div>\n                            <div className=\"mt-3 mb-2 text-xs font-bold\">예약 시간</div>\n                            {startDate}\n                        </div>\n                        <div>\n                            <div className=\"mt-3 mb-2 text-xs font-bold\">예약 물품</div>\n                            {savedSelectedItems.map((item) => (\n                                <div key={item.id} className='flex flex-row mt-1'>\n                                    {item.label} <p className='ml-5'>수량 : {item.quantity}개</p>\n                                </div>\n                            ))}\n                        </div>\n                        <div>\n                            <div className=\"mt-3 mb-2 text-xs font-bold\">예상 총 금액</div>\n                            {totalPrice.toLocaleString()}원\n                        </div>\n                        \n                    </div>\n\n                    \n\n                    <button type=\"submit\" className=\"Login_login rounded-md  mt-10 w-full h-12 bg-cyan-300 text-white text-bold\" onSubmit={handleSubmit}>예약하기</button>\n                </form>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default ProductResevation;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\PickDatePicker.jsx",["143","144"],[],"import 'react-datepicker/dist/react-datepicker.css';\nimport { ko } from 'date-fns/esm/locale';\nimport React, { useState, forwardRef} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport './practice.css';\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\n\n// product에 들어가는 달력 날짜 함수입니다 + 시간 합쳤습니다.\n\nfunction PickDatePicker () {\n    const [startDate, setStartDate] = useState(\n        setHours(setMinutes(new Date(), 0), 9)\n    );\n    \n    localStorage.setItem(\"startDate\", JSON.stringify(startDate));\n\n    const filterPassedTime = (time) => {\n        const currentDate = new Date();\n        const selectedDate = new Date(time);\n        const result = currentDate.getTime() < selectedDate.getTime();\n\n        return result;\n    };\n\n    const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\n        <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\n          {value}\n        </button>\n    ));\n    \n    return (\n        <DatePicker\n            locale={ko}\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            dateFormat=\"MM월 dd일 HH시\"\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={60}\n            timeCaption=\"time\"\n            minTime={setHours(setMinutes(new Date(), 0), 9)}\n            maxTime={setHours(setMinutes(new Date(), 0), 17)}\n            customInput={<ExampleCustomInput />}\n            minDate={new Date()}\n            filterTime={filterPassedTime}\n            filterDate={date=>date.getDay() != 6 && date.getDay() != 0 }\n            \n        />\n    ) \n} \n\nexport default PickDatePicker;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\BannerCarousel.jsx",["145","146","147"],[],"import 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\n\n\n// product위에 사진 carousel 함수입니다.\n\nfunction BannerCarousel() {\n    return (\n        <Carousel\n            autoPlay={true}\n            infiniteLoop={true}\n            useKeyboardArrows={true}\n            swipeable={false}\n            dynamicHeight={false}\n            showStatus={false}\n            showThumbs={false}\n            \n        >\n            <div>\n                <img src='./image/carcenter0.jpg' className='h-60 bg-cover'/>\n            </div>\n            <div>\n                <img src='./image/carcenter1.jpg' className='h-60 bg-cover'/>\n            </div>\n            <div>\n                <img src='./image/carcenter2.jpg' className='h-60 bg-cover'/>\n            </div>\n            \n        </Carousel>\n    );\n}\n\nexport default BannerCarousel;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\ProductReview.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\DropDown2.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Product\\Modal.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\LoginMain\\LoginMain.jsx",[],[],"C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\LoginMain\\ListCard.jsx",["148"],[],"import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction ListCard({challenge, index}) {\n    const navigate = useNavigate();\n    const [isBookmarked, setIsBookmarked] = useState(false);\n\n    const handleBookmarkClick = () => {\n        setIsBookmarked(!isBookmarked);\n    };\n\n    return (\n        <div className=\"bg-gray-50 shadow-lg p-5 rounded-md\">\n            <h2 className=\"text-indigo-500\">\n                <span className=\"text-indigo-300 mr-2\">{challenge.name}</span>\n            </h2>\n            <div>\n                <img src={challenge.image} className=\"rounded-md my-4 md:h-52 w-full\" />\n            </div>\n            <div className=\"flex justify-around\">\n                <button className=\"bg-yellow-500/80 hover:bg-yellow-500/90  py-2 rounded-md text-white font-medium tracking-wider transition w-5/12\" onClick={() => navigate(\"/product\")}>상세보기</button>\n                \n                \n                <button className={` items-center  transition rounded-md w-5/12 ml-3 text-white ${ isBookmarked ? \"bg-red-500/60 hover:bg-red-500/80\" : \"bg-gray-500/60 hover:bg-gray-500/80\" }`} onClick={() => handleBookmarkClick()}>\n                    즐겨찾기\n                </button>\n            </div>\n        </div>\n    )\n    \n}\n\nexport default ListCard;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\LoginMain\\LoginMainReview.jsx",["149"],[],"import React from \"react\";\n\nfunction LoginMainReview() {\n\n    return (\n        <div class=\"p-4 sm:w-1/2 lg:w-1/3\">\n            <div class=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\n                <img class=\"lg:h-60 md:h-48 w-full object-cover object-center\"\n                    src=\"https://picsum.photos/id/188/720/400\" alt=\"blog\"/>\n                <div class=\"p-6 bg-white\">\n                    \n                    <h1 class=\"text-2xl font-semibold mb-3\">가성비가 좋았어요</h1>\n                    <p class=\"leading-relaxed mb-3\">Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Aperiam modi, expedita quos doloremque autem ipsum itaque incidunt ipsam reprehenderit\n                        fuga! Dolores quisquam eius cum accusamus?</p>\n                    <div class=\"flex items-center flex-wrap \">\n                        <a class=\"text-indigo-300 inline-flex items-center md:mb-2 lg:mb-0\">자세히 보기\n                            <svg class=\"w-4 h-4 ml-2\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"\n                                fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path d=\"M5 12h14\"></path>\n                                <path d=\"M12 5l7 7-7 7\"></path>\n                            </svg>\n                        </a>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginMainReview;","C:\\Users\\dyd97\\OneDrive\\바탕 화면\\test-main\\src\\components\\Footer.jsx",[],[],[],{"ruleId":"150","severity":1,"message":"151","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":14},{"ruleId":"150","severity":1,"message":"154","line":9,"column":11,"nodeType":"152","messageId":"153","endLine":9,"endColumn":17},{"ruleId":"150","severity":1,"message":"155","line":13,"column":12,"nodeType":"152","messageId":"153","endLine":13,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":40,"column":41,"nodeType":"158","endLine":40,"endColumn":72},{"ruleId":"150","severity":1,"message":"154","line":13,"column":11,"nodeType":"152","messageId":"153","endLine":13,"endColumn":17},{"ruleId":"150","severity":1,"message":"155","line":31,"column":12,"nodeType":"152","messageId":"153","endLine":31,"endColumn":18},{"ruleId":"150","severity":1,"message":"159","line":32,"column":12,"nodeType":"152","messageId":"153","endLine":32,"endColumn":19},{"ruleId":"150","severity":1,"message":"160","line":32,"column":21,"nodeType":"152","messageId":"153","endLine":32,"endColumn":31},{"ruleId":"161","severity":1,"message":"162","line":43,"column":8,"nodeType":"163","endLine":43,"endColumn":14,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":52,"column":8,"nodeType":"163","endLine":52,"endColumn":23,"suggestions":"166"},{"ruleId":"161","severity":1,"message":"167","line":59,"column":8,"nodeType":"163","endLine":59,"endColumn":18,"suggestions":"168"},{"ruleId":"156","severity":1,"message":"157","line":82,"column":41,"nodeType":"158","endLine":82,"endColumn":72},{"ruleId":"156","severity":1,"message":"157","line":74,"column":29,"nodeType":"158","endLine":74,"endColumn":94},{"ruleId":"150","severity":1,"message":"169","line":6,"column":21,"nodeType":"152","messageId":"153","endLine":6,"endColumn":31},{"ruleId":"150","severity":1,"message":"170","line":41,"column":15,"nodeType":"152","messageId":"153","endLine":41,"endColumn":30},{"ruleId":"171","severity":1,"message":"172","line":47,"column":45,"nodeType":"173","messageId":"174","endLine":47,"endColumn":47},{"ruleId":"171","severity":1,"message":"172","line":47,"column":67,"nodeType":"173","messageId":"174","endLine":47,"endColumn":69},{"ruleId":"156","severity":1,"message":"157","line":20,"column":17,"nodeType":"158","endLine":20,"endColumn":78},{"ruleId":"156","severity":1,"message":"157","line":23,"column":17,"nodeType":"158","endLine":23,"endColumn":78},{"ruleId":"156","severity":1,"message":"157","line":26,"column":17,"nodeType":"158","endLine":26,"endColumn":78},{"ruleId":"156","severity":1,"message":"157","line":19,"column":17,"nodeType":"158","endLine":19,"endColumn":89},{"ruleId":"175","severity":1,"message":"176","line":17,"column":25,"nodeType":"158","endLine":17,"endColumn":93},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'errRef' is assigned a value but never used.","'errMsg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emailRegex'. Either include it or remove the dependency array.","ArrayExpression",["177"],"React Hook useEffect has a missing dependency: 'passwordRegex'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'nickRegex'. Either include it or remove the dependency array.",["179"],"'setAddress' is assigned a value but never used.","'reservationData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [emailRegex, user]",{"range":"186","text":"187"},"Update the dependencies array to be: [pwd, matchPwd, passwordRegex]",{"range":"188","text":"189"},"Update the dependencies array to be: [nickRegex, nickname]",{"range":"190","text":"191"},[1428,1434],"[emailRegex, user]",[1668,1683],"[pwd, matchPwd, passwordRegex]",[1854,1864],"[nickRegex, nickname]"]